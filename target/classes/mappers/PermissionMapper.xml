<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xxxx.crm.dao.PermissionMapper">
    <resultMap id="BaseResultMap" type="com.xxxx.crm.vo.Permission">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="role_id" property="roleId" jdbcType="INTEGER"/>
        <result column="module_id" property="moduleId" jdbcType="INTEGER"/>
        <result column="acl_value" property="aclValue" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, role_id, module_id, acl_value, create_date, update_date
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_permission
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.xxxx.crm.vo.Permission">
    insert into t_permission (id, role_id, module_id, 
      acl_value, create_date, update_date
      )
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{moduleId,jdbcType=INTEGER}, 
      #{aclValue,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.xxxx.crm.vo.Permission">
        insert into t_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="moduleId != null">
                module_id,
            </if>
            <if test="aclValue != null">
                acl_value,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="moduleId != null">
                #{moduleId,jdbcType=INTEGER},
            </if>
            <if test="aclValue != null">
                #{aclValue,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xxxx.crm.vo.Permission">
        update t_permission
        <set>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="moduleId != null">
                module_id = #{moduleId,jdbcType=INTEGER},
            </if>
            <if test="aclValue != null">
                acl_value = #{aclValue,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xxxx.crm.vo.Permission">
    update t_permission
    set role_id = #{roleId,jdbcType=INTEGER},
      module_id = #{moduleId,jdbcType=INTEGER},
      acl_value = #{aclValue,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--通过用户id查询相关资源权限-->
    <select id="queryPermissionByRoleId" resultType="java.lang.Integer" parameterType="int">
    select count(1) from t_permission where role_id=#{roleId}
  </select>

    <!--通过用户id删除相关资源权限-->
    <delete id="deletePermission" parameterType="int">
    delete from t_permission where role_id=#{roleId}
  </delete>

    <!--批量添加记录-->
    <insert id="insertBatch" parameterType="com.xxxx.crm.vo.Permission">
        insert into t_permission (role_id, module_id, acl_value, create_date, update_date)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.roleId},#{item.moduleId},#{item.aclValue},#{item.createDate},#{item.updateDate})
        </foreach>
    </insert>

    <!--查询对应角色所拥有的资源id-->
    <select id="queryRoleHasModuleIdByRoleId" parameterType="Int" resultType="java.lang.Integer">
    select  module_id from t_permission where role_id=#{roleId}
  </select>

    <!--通过用户id查询对应的用户列表(对应的用户所拥有的资源权限码)-->
    <select id="queryUserHasPermissionByUserId" parameterType="int" resultType="java.lang.Integer">
    SELECT
	t_permission.acl_value
FROM
	t_permission
WHERE
	role_id IN ( SELECT ur.role_id FROM t_user u LEFT JOIN t_user_role ur ON u.id = ur.user_id WHERE u.id = #{userId} )
  </select>

    <!--通过资源id查询权限记录-->
    <select id="queryCountByModuleId" resultType="int" parameterType="java.lang.Integer">
    select count(1) from t_permission where module_id=#{moduleId}
  </select>

    <!--通过资源id删除对应的权限记录-->
    <delete id="deletePermissionByModuleId" parameterType="int">
  delete from t_permission where module_id=#{moduleId}
</delete>
</mapper>